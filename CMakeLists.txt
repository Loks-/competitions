cmake_minimum_required( VERSION 3.12 )
set(CMAKE_OSX_SYSROOT "/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk")
project( competitions )
if (APPLE)
    # set(CMAKE_C_COMPILER /opt/homebrew/bin/gcc-14)
    # set(CMAKE_CXX_COMPILER /opt/homebrew/bin/g++-14)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Werror -Wall -Wextra")
else (APPLE)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Werror -Wall -Wextra -Warray-bounds=0 -Werror=stringop-overflow=0")
endif (APPLE)
string( TOLOWER ${CMAKE_BUILD_TYPE} BUILD_TYPE_LOWERCASE )
set( CMAKE_CXX_STANDARD 20 )
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)
set( CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_HOME_DIRECTORY}/${BUILD_TYPE_LOWERCASE}/build" )
include_directories( PRIVATE "${PROJECT_SOURCE_DIR}" )
find_package( Threads )

file( GLOB_RECURSE TESTER_SOURCES RELATIVE "${PROJECT_SOURCE_DIR}" "${PROJECT_SOURCE_DIR}/tester/*.cpp" )
add_executable( tester ${TESTER_SOURCES} )

add_executable( include_headers "${PROJECT_SOURCE_DIR}/utils/include_headers.cpp" )
# add_executable( current_solution "${PROJECT_SOURCE_DIR}/utils/current_solution.cpp" )

enable_testing()

add_test( NAME tester_binary_search_tree COMMAND tester binary_search_tree )
add_test( NAME tester_bst_split_join COMMAND tester bst_split_join )
add_test( NAME tester_convergent COMMAND tester convergent )
add_test( NAME tester_generating_function COMMAND tester generating_function )
add_test( NAME tester_fixed_universe_successor COMMAND tester fixed_universe_successor )
add_test( NAME tester_graph_distance COMMAND tester graph_distance )
add_test( NAME tester_graph_distance_u COMMAND tester graph_distance_unsigned )
add_test( NAME tester_graph_distance_pc COMMAND tester graph_distance_positive_cost )
add_test( NAME tester_heap_base COMMAND tester heap_base )
add_test( NAME tester_heap_ext COMMAND tester heap_ext )
add_test( NAME tester_interpolation COMMAND tester interpolation )
add_test( NAME tester_long_mult COMMAND tester long_mult )
add_test( NAME tester_lowest_common_ancestor COMMAND tester lowest_common_ancestor )
add_test( NAME tester_mertens COMMAND tester mertens )
add_test( NAME tester_mertens_compact COMMAND tester mertens_compact )
add_test( NAME tester_minimum_spanning_tree COMMAND tester minimum_spanning_tree )
add_test( NAME tester_modular_fft COMMAND tester modular_fft )
add_test( NAME tester_primes_generation COMMAND tester primes_generation )
add_test( NAME tester_range_minimum_query COMMAND tester range_minimum_query )
add_test( NAME tester_tree_path_maxima COMMAND tester tree_path_maxima )
